#!/usr/bin/env python
# encoding: utf-8
'''
Compute the correlation all-to-all between odorants.
Save those with a high pairwise correlation to a plot file.
'''
import pylab as pl
import numpy as np
from hallem.data import Hallem
import scipy as sp
from scipy import stats

hallem = Hallem()
matrix = np.transpose(hallem.response)

corr = []
strong_corr = []
for i, rowA in enumerate(matrix):
    for j, rowB in enumerate(matrix):
        if j > i:
            c = sp.stats.pearsonr(rowA, rowB)[0]
            if c > 0.7 or c < -0.5:
                strong_corr.append((i, j, c))
            corr.append(c)

strong_corr = np.asarray(strong_corr)

pl.figure(figsize=(5, 4), dpi=320)
pl.title("Correlation between ORs")
pl.xlabel("Pearson Correlation")
pl.ylabel("Count")
pl.hist(corr, bins=20)
pl.grid()
pl.xlim(-1, 1)
pl.savefig("figures/correlation/ORs/pearson_ORs.png")

sorting = np.argsort(np.abs(strong_corr[:, 2]))

for v, i in enumerate(strong_corr[sorting]):
    o1 = i[0]
    o2 = i[1]
    o1_name = hallem.or_list[o1]
    o2_name = hallem.or_list[o2]

    c = round(i[2], 3)

    o1_spec = matrix[o1]
    o2_spec = matrix[o2]

    sorting = np.argsort(o1_spec)

    fig = pl.figure(figsize=(32, 16), dpi=320)

    ax1 = pl.subplot2grid((2, 4), (0, 0), colspan=3)
    ax1.bar(np.arange(0, len(o1_spec), 1), o1_spec[sorting], width=0.3, color='b', alpha=.6)
    ax1.bar(np.arange(.3, len(o2_spec) + .3, 1), o2_spec[sorting], width=0.3, color='r', alpha=.6)
    #ax1.get_xaxis().set_ticks(np.arange(0.15, len(o1_spec), 1))
    #ax1.set_xticklabels(hallem.odorant_list[sorting])
    ax1.legend((o1_name, o2_name), loc=2)
    ax1.set_xlabel("Odorants")
    ax1.set_ylabel("spikes/s")
    ax1.grid()

    ax2 = pl.subplot2grid((2, 4), (0, 3), colspan=1)
    ax2.plot(o1_spec, o2_spec, 'o')
    ax2.grid()
    ax2.set_xlabel(o1_name)
    ax2.set_ylabel(o2_name)

    sorting = np.argsort(o2_spec)

    ax3 = pl.subplot2grid((2, 4), (1, 1), colspan=3)
    ax3.bar(np.arange(0, len(o1_spec), 1), o1_spec[sorting], width=0.3, color='b', alpha=.6)
    ax3.bar(np.arange(.3, len(o2_spec) + .3, 1), o2_spec[sorting], width=0.3, color='r', alpha=.6)
    #ax3.get_xaxis().set_ticks(np.arange(0.15, len(o1_spec), 1))
    #ax3.set_xticklabels(hallem.odorant_list[sorting])
    ax3.legend((o1_name, o2_name), loc=2)
    ax3.set_xlabel("Odorants")
    ax3.set_ylabel("spikes/s")
    ax3.grid()

    ax4 = pl.subplot2grid((2, 4), (1, 0), colspan=1)
    ax4.plot(o2_spec, o1_spec, 'o')
    ax4.grid()
    ax4.set_xlabel(o2_name)
    ax4.set_ylabel(o1_name)

    pl.savefig("figures/correlation/ORs/" + str(c) + "_" + o1_name + "_" + o2_name + ".png")

